apiVersion: apps/v1
kind: Deployment
metadata:
  name: i3-2-aramid-indexer-mainnet-db-deployment
  namespace: aramid-indexer-mainnet
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: i3-2-aramid-indexer-mainnet-db
  template:
    metadata:
      labels:
        app: i3-2-aramid-indexer-mainnet-db
    spec:
      nodeName: sch-g-02
      containers:
        - name: i3-2-db
          image: postgres:14
          imagePullPolicy: IfNotPresent
          #command: ["/bin/sh", "-ec", "while :; do date; sleep 60 ; done"]
          resources:
            requests:
              memory: "10000Mi"
              cpu: "1000m"
            limits:
              memory: "20000Mi"
              cpu: "8000m"
          env:
            - name: PGDATA
              value: /data
            # - name: POSTGRES_USER
            #   valueFrom:
            #     secretKeyRef:
            #       name: i3-2-aramid-indexer-secret
            #       key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: i3-2-aramid-indexer-secret
                  key: POSTGRES_PASSWORD
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: i3-2-aramid-indexer-secret
                  key: POSTGRES_DB
          ports:
            - containerPort: 5432
              protocol: "TCP"
          readinessProbe:
            tcpSocket:
              port: 5432
            initialDelaySeconds: 5
            periodSeconds: 10
          securityContext:
            runAsUser: 999
            runAsGroup: 999
          lifecycle:
            preStop:
              exec:
                command: ["sleep", "10"]
          volumeMounts:
            - name: i3-2-aramid-indexer-db-mainnet-pvc
              mountPath: /data

      volumes:
        - name: i3-2-aramid-indexer-db-mainnet-pvc
          persistentVolumeClaim:
            claimName: i3-2-aramid-indexer-db-mainnet-pvc

---
apiVersion: v1
kind: Service
metadata:
  name: i3-2-aramid-indexer-mainnet-db-service
  namespace: aramid-indexer-mainnet
spec:
  type: ClusterIP
  selector:
    app: i3-2-aramid-indexer-mainnet-db
  ports:
    - name: algoclient
      protocol: TCP
      appProtocol: http
      port: 5432
      targetPort: 5432

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: i3-2-aramid-indexer-mainnet-conduit-deployment
  namespace: aramid-indexer-mainnet
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: i3-2-aramid-indexer-mainnet-conduit
  template:
    metadata:
      labels:
        app: i3-2-aramid-indexer-mainnet-conduit
    spec:
      nodeName: sch-g-02
      initContainers:
      - name: wait-for-db-before-starup
        image: busybox
        command: ['sh', '-c', 'echo -e "Checking for the availability of DB Server deployment"; while ! nc -z i3-2-aramid-indexer-mainnet-db-service.aramid-indexer-mainnet 5432; do sleep 1; printf "-"; done; echo -e "  >> DB Server has started";']

      containers:
        - name: i3-2-conduit
          image: scholtz2/aramid-conduit:v1.7.0-stable
          command:
            [
              "/bin/bash",
              "-ec",
              "date; sleep 10; date; conduit; sleep 100 ; date; ",
            ]
            #while ! timeout 1 bash -c "echo > /dev/tcp/localhost/8080";  do sleep 1 && echo -n .; done
          #command: ["/bin/bash", "-ec", "while :; do date; sleep 60 ; done"]
          securityContext:
            runAsUser: 999
            runAsGroup: 999
          volumeMounts:
            - name: i3-2-conduit-conf
              mountPath: /data/conduit.yml
              subPath: conduit.yml
            - name: aramidmain-indexer-conf
              mountPath: /data/consensus.json
              subPath: consensus.json
            - name: i3-2-aramid-conduit-1-pvc
              mountPath: /data
        - name: i3-2-follow-node
          image: scholtz2/aramid-algo-follow-node:v3.25.0-stable
          command:
            [
              "/bin/bash",
              "-ec",
              "date; sleep 1 ;cp --update=none config.json data/config.json; cp --update=none genesis/aramidmain/genesis.json data/genesis.json; cp --update=none consensus.json data/consensus.json; date; goal node start; date; while :; do date; sleep 600 ; done ",
            ]
          # command: ["goal", "node", "start"]
          # command: ["/bin/bash", "-ec", "while :; do date; sleep 600 ; done"]
          # lifecycle:
          #   postStart:
          #     exec:
          #       command: ["goal", "node", "start"]
          imagePullPolicy: Always
          resources:
            requests:
              memory: "4000Mi"
              cpu: "2000m"
            limits:
              memory: "20000Mi"
              cpu: "16000m"
          ports:
            - containerPort: 8080
              protocol: TCP
          readinessProbe:
            tcpSocket:
              port: 8080
            initialDelaySeconds: 10
            timeoutSeconds: 10
            failureThreshold: 20
          livenessProbe:
            tcpSocket:
              port: 8080
            initialDelaySeconds: 20
            timeoutSeconds: 5
            failureThreshold: 5
            terminationGracePeriodSeconds: 1
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
          volumeMounts:
            - name: i3-2-aramid-follow-main-vol-root-1
              mountPath: /app/data
            - name: i3-2-aramid-follow-main-vol-net-1
              mountPath: /app/data/aramidmain-v1.0
            - name: i3-2-aramid-indexer-secret
              subPath: INDEXER_ALGOD_TOKEN
              mountPath: /app/data/algod.token
            - name: i3-2-aramid-indexer-secret
              subPath: INDEXER_API_TOKEN
              mountPath: /app/data/algod.admin.token
       
      volumes:
        - name: aramidmain-indexer-conf
          configMap:
            name: aramidmain-indexer-conf
        - name: i3-2-conduit-conf
          configMap:
            name: i3-2-conduit-conf
        - name: i3-2-aramid-indexer-db-mainnet-pvc
          persistentVolumeClaim:
            claimName: i3-2-aramid-indexer-db-mainnet-pvc
        - name: i3-2-aramid-follow-main-vol-root-1
          persistentVolumeClaim:
            claimName: i3-2-aramid-follow-main-vol-root-1
        - name: i3-2-aramid-follow-main-vol-net-1
          persistentVolumeClaim:
            claimName: i3-2-aramid-follow-main-vol-net-1
        - name: i3-2-aramid-conduit-1-pvc
          persistentVolumeClaim:
            claimName: i3-2-aramid-conduit-1-pvc
        - name: i3-2-aramid-indexer-secret
          secret:
            secretName: i3-2-aramid-indexer-secret

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: i3-2-aramid-indexer-mainnet-indexer-deployment
  namespace: aramid-indexer-mainnet
spec:
  replicas: 3
  selector:
    matchLabels:
      appId: i3-2-aramid-indexer-mainnet
  template:
    metadata:
      labels:
        appId: i3-2-aramid-indexer-mainnet
        app: aramid-indexer-mainnet
    spec:
      initContainers:
      - name: wait-for-db-before-starup
        image: busybox
        command: ['sh', '-c', 'echo -e "Checking for the availability of DB Server deployment"; while ! nc -z i3-2-aramid-indexer-mainnet-db-service.aramid-indexer-mainnet 5432; do sleep 1; printf "-"; done; echo -e "  >> DB Server has started";']

      containers:
        - name: i3-2-indexer
          image: scholtz2/aramid-indexer:v3.5.0-stable
          imagePullPolicy: Always
          #command: ["/bin/bash", "-ec", "while :; do date; sleep 60 ; done"]
          command: ["/bin/bash", "-c", "algorand-indexer daemon"]

          ports:
            - containerPort: 8980
              protocol: TCP
          readinessProbe:
              tcpSocket:
                port: 8980
              initialDelaySeconds: 10
              timeoutSeconds: 5
              failureThreshold: 2
          livenessProbe:
              tcpSocket:
                port: 8980
              initialDelaySeconds: 20
              timeoutSeconds: 5
              failureThreshold: 2
              terminationGracePeriodSeconds: 1
          env:
            - name: INDEXER_POSTGRES_CONNECTION_STRING
              valueFrom:
                secretKeyRef:
                  name: i3-2-aramid-indexer-secret
                  key: INDEXER_POSTGRES_CONNECTION_STRING
            - name: INDEXER_ALGOD_ADDRESS
              value: "localhost:8080"
            - name: INDEXER_ALGOD_TOKEN
              valueFrom:
                secretKeyRef:
                  name: i3-2-aramid-indexer-secret
                  key: INDEXER_ALGOD_TOKEN
            - name: INDEXER_API_TOKEN
              valueFrom:
                secretKeyRef:
                  name: i3-2-aramid-indexer-secret
                  key: INDEXER_API_TOKEN
            - name: INDEXER_GENESIS
              value: "/app/genesis/aramidmain/genesis.json"
            - name: INDEXER_DEV_MODE
              value: "0"
            - name: INDEXER_METRICS_MODE
              value: "1"
            - name: INDEXER_ENABLE_ALL_PARAMETERS
              value: "1"
            - name: INDEXER_DATA
              value: "/app"
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000

          volumeMounts:
            - name: aramidmain-indexer-conf
              mountPath: /app/consensus.json
              subPath: consensus.json
      volumes:
        - name: aramidmain-indexer-conf
          configMap:
            name: aramidmain-indexer-conf

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: i3-2-aramid-indexer-db-mainnet-pvc
  namespace: aramid-indexer-mainnet
spec:
  storageClassName: i3-2-aramid-indexer-db-mainnet-pv
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 20Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: i3-2-aramid-follow-main-vol-root-1
  namespace: aramid-indexer-mainnet
spec:
  storageClassName: i3-2-aramid-follow-main-root-1
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 20Gi

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: i3-2-aramid-follow-main-vol-net-1
  namespace: aramid-indexer-mainnet
spec:
  storageClassName: i3-2-aramid-follow-main-net-1
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 50Gi

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: i3-2-aramid-conduit-1-pvc
  namespace: aramid-indexer-mainnet
spec:
  storageClassName: i3-2-aramid-conduit-1
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 50Gi

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: i3-2-aramid-indexer-db-mainnet-pv
spec:
  storageClassName: i3-2-aramid-indexer-db-mainnet-pv
  capacity:
    storage: 20Gi
  accessModes:
    - ReadWriteMany
  hostPath:
    path: "/mnt/nvme2/aramid/i3-2-mainnet-db"
  nodeAffinity:
    required:
      nodeSelectorTerms:
        - matchExpressions:
            - key: kubernetes.io/hostname
              operator: In
              values:
                - sch-g-02
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: i3-2-aramid-follow-main-root-1
spec:
  storageClassName: i3-2-aramid-follow-main-root-1
  capacity:
    storage: 20Gi
  accessModes:
    - ReadWriteMany
  hostPath:
    path: "/mnt/14tb/aramid/i3-2-mainnet-follow/root"
  nodeAffinity:
    required:
      nodeSelectorTerms:
        - matchExpressions:
            - key: kubernetes.io/hostname
              operator: In
              values:
                - sch-g-02
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: i3-2-aramid-follow-main-net-1
spec:
  storageClassName: i3-2-aramid-follow-main-net-1
  capacity:
    storage: 50Gi
  accessModes:
    - ReadWriteMany
  hostPath:
    path: "/mnt/nvme2/aramid/i3-2-mainnet-follow/net"
  nodeAffinity:
    required:
      nodeSelectorTerms:
        - matchExpressions:
            - key: kubernetes.io/hostname
              operator: In
              values:
                - sch-g-02

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: i3-2-aramid-conduit-1
spec:
  storageClassName: i3-2-aramid-conduit-1
  capacity:
    storage: 50Gi
  accessModes:
    - ReadWriteMany
  hostPath:
    path: "/mnt/14tb/aramid/i3-2-mainnet-conduit"
  nodeAffinity:
    required:
      nodeSelectorTerms:
        - matchExpressions:
            - key: kubernetes.io/hostname
              operator: In
              values:
                - sch-g-02
