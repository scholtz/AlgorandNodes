apiVersion: v1
kind: Namespace
metadata:
  name: algo-sandbox
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sandbox-algod-with-kmd-deployment
  namespace: algo-sandbox
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: algo-participation-sandbox
  template:
    metadata:
      labels:
        app: algo-participation-sandbox
    spec:
      terminationGracePeriodSeconds: 3
      containers:
        - name: algo-participation-sandbox
          image: scholtz2/algorand-participation-sandbox:3.27.0-stable
          imagePullPolicy: Always
#           resources:
#            requests:
#              memory: "10000Mi"
#              cpu: "16000m"
#            limits:
#              memory: "20000Mi"
#              cpu: "32000m"
#          command: ["/bin/bash", "-ec", "while :; do date; sleep 60 ; done"]
          command: ["/bin/bash", "/app/run-participation.sh"]
          ports:
            - containerPort: 4001
              protocol: TCP
            - containerPort: 4002
              protocol: TCP
            - containerPort: 18888
              protocol: TCP
          startupProbe:
            exec:
              command:
              - /bin/bash
              - /app/health.sh
            initialDelaySeconds: 10
            periodSeconds: 10   
            failureThreshold: 1000
#          readinessProbe:
#            exec:
#              command:
#              - /bin/bash
#              - /app/health.sh
#            initialDelaySeconds: 10
#            timeoutSeconds: 10   
#            failureThreshold: 100
#          livenessProbe:
#            exec:
#              command:
#              - /bin/bash
#              - /app/health.sh
#            initialDelaySeconds: 10
#            timeoutSeconds: 10        
#            failureThreshold: 6
#            terminationGracePeriodSeconds: 60
          securityContext:
            runAsUser: 0
            runAsGroup: 0
          volumeMounts:
            - name: algo-sandbox-participation-pvc
              mountPath: /app/data
      volumes:
        - name: algo-sandbox-participation-pvc
          persistentVolumeClaim:
            claimName: algo-sandbox-participation-pvc

---
apiVersion: v1
kind: Service
metadata:
  name: algo-participation-algod-sandbox
  namespace: algo-sandbox
spec:
  type: NodePort
  selector:
    app: algo-participation-sandbox
  ports:
    - name: algoclient
      protocol: TCP
      appProtocol: http
      port: 4001
      targetPort: 4001
      nodePort: 31001
---
apiVersion: v1
kind: Service
metadata:
  name: algo-participation-kmd-wallet-sandbox
  namespace: algo-sandbox
spec:
  type: NodePort
  selector:
    app: algo-participation-sandbox
  ports:
    - name: algoclient
      protocol: TCP
      appProtocol: http
      port: 4002
      targetPort: 4002
      nodePort: 31002
---
apiVersion: v1
kind: Service
metadata:
  name: algo-participation-kmd-partkeyapi-sandbox
  namespace: algo-sandbox
spec:
  type: NodePort
  selector:
    app: algo-participation-sandbox
  ports:
    - name: algoclient
      protocol: TCP
      appProtocol: http
      port: 18888
      targetPort: 18888
      nodePort: 31003
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: algo-sandbox-participation-pvc
  namespace: algo-sandbox
spec:
  storageClassName: algo-sandbox-participation-pv
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 40Gi
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: algo-sandbox-participation-pv
spec:
  storageClassName: algo-sandbox-participation-pv
  capacity:
    storage: 40Gi
  accessModes:
    - ReadWriteMany
  hostPath:
    path: "/run/desktop/mnt/host/c/algo/participation-sandbox"