apiVersion: v1
kind: Namespace
metadata:
  name: aramid-relay-mainnet
---
apiVersion: v1
kind: Service
metadata:
  name: aramid-set-service
  namespace: aramid-relay-mainnet
spec:
  type: NodePort
  selector:
    app: aramid-relay-mainnet
  ports:
    - name: algorelay
      protocol: TCP
      appProtocol: http
      port: 14160
      nodePort: 14160
      targetPort: 14160
---
apiVersion: v1
kind: Service
metadata:
  name: aramid-set-service-data
  namespace: aramid-relay-mainnet
spec:
  type: ClusterIP
  selector:
    app: aramid-relay-mainnet
  ports:
    - name: algoclient
      protocol: TCP
      appProtocol: http
      port: 18080
      targetPort: 18080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: relaynode-1
  namespace: aramid-relay-mainnet
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: aramid-relay-mainnet
  template:
    metadata:
      labels:
        app: aramid-relay-mainnet
        lb: aramid-relay-mainnet
    spec:
      nodeName: sch-h-01
      containers:
        - name: aramid-relay-mainnet
          image: scholtz2/aramid-algo-node:v3.16.3-stable
          imagePullPolicy: Always
          resources:
            requests:
              memory: "5000Mi"
              cpu: "5000m"
            limits:
              memory: "20000Mi"
              cpu: "32000m"
          #command: ["/bin/sh", "-ec", "while :; do echo '.'; sleep 5 ; done"]
          startupProbe:
            exec:
              command:
              - /bin/bash
              - /app/health.sh
            initialDelaySeconds: 10
            periodSeconds: 10   
            failureThreshold: 1000
          readinessProbe:
            exec:
              command:
              - /bin/bash
              - /app/health.sh
            initialDelaySeconds: 10
            timeoutSeconds: 10   
            failureThreshold: 100
          livenessProbe:
            exec:
              command:
              - /bin/bash
              - /app/health.sh
            initialDelaySeconds: 10
            timeoutSeconds: 10        
            failureThreshold: 6
            terminationGracePeriodSeconds: 60
          ports:
            - containerPort: 14160
              protocol: TCP
            - containerPort: 18080
              protocol: TCP
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
          volumeMounts:
            - name: aramid-main-vol-root-1
              mountPath: /app/data
            - name: aramid-main-vol-net-1
              mountPath: /app/data/aramidmain-v1.0
            - name: aramid-main-vol-catchpoints-1
              mountPath: /app/data/aramidmain-v1.0/catchpoints
      volumes:
        - name: aramid-main-vol-root-1
          persistentVolumeClaim:
            claimName: aramid-main-vol-root-1
        - name: aramid-main-vol-net-1
          persistentVolumeClaim:
            claimName: aramid-main-vol-net-1
        - name: aramid-main-vol-catchpoints-1
          persistentVolumeClaim:
            claimName: aramid-main-vol-catchpoints-1

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: aramid-main-vol-root-1
  namespace: aramid-relay-mainnet
spec:
  storageClassName: aramid-main-root-1
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: aramid-main-vol-net-1
  namespace: aramid-relay-mainnet
spec:
  storageClassName: aramid-main-net-1
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 50Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: aramid-main-vol-catchpoints-1
  namespace: aramid-relay-mainnet
spec:
  storageClassName: aramid-main-catchpoints-1
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Gi
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: aramid-main-root-1
spec:
  storageClassName: aramid-main-root-1
  capacity:
    storage: 20Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/mnt/k8s/aramid/mainnet/root"
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - sch-h-01
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: aramid-main-net-1
spec:
  storageClassName: aramid-main-net-1
  capacity:
    storage: 50Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/mnt/k8s/aramid/mainnet/net"
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - sch-h-01
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: aramid-main-catchpoints-1
spec:
  storageClassName: aramid-main-catchpoints-1
  capacity:
    storage: 100Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/mnt/k8s/aramid/mainnet/catchpoints"
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - sch-h-01