apiVersion: v1
kind: Namespace
metadata:
  name: aramid-relay-mainnet
---
apiVersion: v1
kind: Service
metadata:
  name: aramid-set-service-h2
  namespace: aramid-relay-mainnet
spec:
  type: NodePort
  selector:
    app: aramid-relay-mainnet-h2
  ports:
    - name: algorelay
      protocol: TCP
      appProtocol: http
      port: 14260
      nodePort: 14260
      targetPort: 14260
---
apiVersion: v1
kind: Service
metadata:
  name: aramid-set-service-data-h2
  namespace: aramid-relay-mainnet
spec:
  type: ClusterIP
  selector:
    app: aramid-relay-mainnet-h2
  ports:
    - name: algoclient
      protocol: TCP
      appProtocol: http
      port: 18280
      targetPort: 18280
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: relaynode-2
  namespace: aramid-relay-mainnet
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: aramid-relay-mainnet-h2
  template:
    metadata:
      labels:
        app: aramid-relay-mainnet-h2
        lb: aramid-relay-mainnet
    spec:
      nodeName: sch-g-02
      containers:
        - name: aramid-relay-mainnet-h2
          image: scholtz2/aramid-algo-node:v3.16.3-stable
          imagePullPolicy: Always
          resources:
            requests:
              memory: "2000Mi"
              cpu: "1000m"
            limits:
              memory: "4000Mi"
              cpu: "4000m"
          #command: ["/bin/bash", "-ec", "while :; do date; sleep 60 ; done"]
          #command:
          #  - /bin/bash
          #  - /app/run.sh
          startupProbe:
            exec:
              command:
              - /bin/bash
              - /app/health.sh
            initialDelaySeconds: 10
            periodSeconds: 10   
            failureThreshold: 1000
          readinessProbe:
            exec:
              command:
              - /bin/bash
              - /app/health.sh
            initialDelaySeconds: 10
            timeoutSeconds: 10   
            failureThreshold: 100
          livenessProbe:
            exec:
              command:
              - /bin/bash
              - /app/health.sh
            initialDelaySeconds: 10
            timeoutSeconds: 10        
            failureThreshold: 6
            terminationGracePeriodSeconds: 60
          ports:
            - containerPort: 14260
              protocol: TCP
            - containerPort: 18280
              protocol: TCP
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
          volumeMounts:
            - name: aramid-main-vol-root-h2
              mountPath: /app/data
            - name: aramid-main-vol-net-h2
              mountPath: /app/data/aramidmain-v1.0
            - name: aramid-main-vol-catchpoints-h2
              mountPath: /app/data/aramidmain-v1.0/catchpoints
      volumes:
        - name: aramid-main-vol-root-h2
          persistentVolumeClaim:
            claimName: aramid-main-vol-root-h2
        - name: aramid-main-vol-net-h2
          persistentVolumeClaim:
            claimName: aramid-main-vol-net-h2
        - name: aramid-main-vol-catchpoints-h2
          persistentVolumeClaim:
            claimName: aramid-main-vol-catchpoints-h2

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: aramid-main-vol-root-h2
  namespace: aramid-relay-mainnet
spec:
  storageClassName: aramid-main-root-h2
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: aramid-main-vol-net-h2
  namespace: aramid-relay-mainnet
spec:
  storageClassName: aramid-main-net-h2
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 50Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: aramid-main-vol-catchpoints-h2
  namespace: aramid-relay-mainnet
spec:
  storageClassName: aramid-main-catchpoints-h2
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Gi
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: aramid-main-root-h2
spec:
  storageClassName: aramid-main-root-h2
  capacity:
    storage: 20Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/mnt/nvme2/aramid/mainnet/root"

  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - sch-g-02
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: aramid-main-net-h2
spec:
  storageClassName: aramid-main-net-h2
  capacity:
    storage: 50Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/mnt/nvme2/aramid/mainnet/net"

  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - sch-g-02
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: aramid-main-catchpoints-h2
spec:
  storageClassName: aramid-main-catchpoints-h2
  capacity:
    storage: 100Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/mnt/nvme2/aramid/mainnet/catchpoints"

  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - sch-g-02