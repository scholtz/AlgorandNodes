apiVersion: v1
kind: Namespace
metadata:
  name: algo-relay-mainnet
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: relaynode-2
  namespace: algo-relay-mainnet
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: algo-relay-mainnet
  template:
    metadata:
      labels:
        app: algo-relay-mainnet
    spec:
      nodeName: sch-h-02
      terminationGracePeriodSeconds: 3
      containers:
        - name: algo-relay-mainnet
          image: scholtz2/algorand-relay-mainnet:4.3.0-stable
          imagePullPolicy: IfNotPresent
          resources:
            requests:
              memory: "10000Mi"
              cpu: "16000m"
            limits:
              memory: "20000Mi"
              cpu: "32000m"
          command:
            - /bin/bash
            - /app/run.sh
          ports:
            - containerPort: 4160
              protocol: TCP
          startupProbe:
            exec:
              command:
              - /bin/bash
              - /app/health.sh
            initialDelaySeconds: 10
            periodSeconds: 10   
            failureThreshold: 1000
          readinessProbe:
            exec:
              command:
              - /bin/bash
              - /app/health.sh
            initialDelaySeconds: 10
            timeoutSeconds: 10   
            failureThreshold: 100
          livenessProbe:
            exec:
              command:
              - /bin/bash
              - /app/health.sh
            initialDelaySeconds: 10
            timeoutSeconds: 10        
            failureThreshold: 6
            terminationGracePeriodSeconds: 60
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
          volumeMounts:
            - name: algo-mainnet-vol-root-2
              mountPath: /app/data
            - name: algo-mainnet-vol-net-2
              mountPath: /app/data/mainnet-v1.0
            - name: algo-mainnet-vol-catchpoints-2
              mountPath: /app/data/mainnet-v1.0/catchpoints
      volumes:
        - name: algo-mainnet-vol-root-2
          persistentVolumeClaim:
            claimName: algo-mainnet-vol-root-2
        - name: algo-mainnet-vol-net-2
          persistentVolumeClaim:
            claimName: algo-mainnet-vol-net-2
        - name: algo-mainnet-vol-catchpoints-2
          persistentVolumeClaim:
            claimName: algo-mainnet-vol-catchpoints-2

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: algo-mainnet-vol-root-2
  namespace: algo-relay-mainnet
spec:
  storageClassName: algo-mainnet-root-2
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: algo-mainnet-vol-net-2
  namespace: algo-relay-mainnet
spec:
  storageClassName: algo-mainnet-net-2
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 500Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: algo-mainnet-vol-catchpoints-2
  namespace: algo-relay-mainnet
spec:
  storageClassName: algo-mainnet-catchpoints-2
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1500Gi
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: algo-mainnet-root-2
spec:
  storageClassName: algo-mainnet-root-2
  capacity:
    storage: 20Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/mnt/k8s/algo/mainnet/root"
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - sch-h-02
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: algo-mainnet-net-2
spec:
  storageClassName: algo-mainnet-net-2
  capacity:
    storage: 500Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/mnt/k8s/algo/mainnet/net"
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - sch-h-02
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: algo-mainnet-catchpoints-2
spec:
  storageClassName: algo-mainnet-catchpoints-2
  capacity:
    storage: 1500Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/mnt/k8s/algo/mainnet/catchpoints"
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - sch-h-02