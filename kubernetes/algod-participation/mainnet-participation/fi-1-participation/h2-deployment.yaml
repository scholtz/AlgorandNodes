apiVersion: v1
kind: Namespace
metadata:
  name: algo-kmd-mainnet
---
apiVersion: v1
kind: Service
metadata:
  name: algo-kmd-service-data
  namespace: algo-kmd-mainnet
spec:
  type: ClusterIP
  selector:
    app: algo-kmd-mainnet
  ports:
    - name: algoclient
      protocol: TCP
      appProtocol: http
      port: 8080
      targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kmd-node-2
  namespace: algo-kmd-mainnet
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: algo-kmd-mainnet
  template:
    metadata:
      labels:
        app: algo-kmd-mainnet
    spec:
      nodeName: s3-k1-fi.a-wallet.net
      terminationGracePeriodSeconds: 3
      containers:
        - name: algo-kmd-mainnet
          image: docker.io/scholtz2/algorand-kmd-mainnet-extended:4.1.2-stable
          imagePullPolicy: Always
          resources:
            requests:
              memory: "10000Mi"
              cpu: "3000m"
            limits:
              memory: "20000Mi"
              cpu: "32000m"
          #          command: ["/bin/sh", "-ec", "while :; do date; sleep 60 ; done"]
          command:
            ["/bin/bash", "/app/run-participation-mainnet-with-appsettings.sh"]
          #            - /bin/bash
          #            - /app/run-kmd.sh
          ports:
            - containerPort: 8080
              protocol: TCP
            - containerPort: 18888
              protocol: TCP
          #          startupProbe:
          #            exec:
          #              command:
          #              - /bin/bash
          #              - /app/health.sh
          #            initialDelaySeconds: 10
          #            periodSeconds: 10
          #            failureThreshold: 1000
          #          readinessProbe:
          #            exec:
          #              command:
          #              - /bin/bash
          #              - /app/health.sh
          #            initialDelaySeconds: 10
          #            timeoutSeconds: 10
          #            failureThreshold: 100
          #          livenessProbe:
          #            exec:
          #              command:
          #              - /bin/bash
          #              - /app/health.sh
          #            initialDelaySeconds: 10
          #            timeoutSeconds: 10
          #            failureThreshold: 6
          #            terminationGracePeriodSeconds: 60
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
          volumeMounts:
            - name: algo-mainnet-kmd-vol-root-2
              mountPath: /app/data
            - name: algo-mainnet-kmd-vol-net-2
              mountPath: /app/data/mainnet-v1.0
            - name: algo-mainnet-kmd-vol-catchpoints-2
              mountPath: /app/data/mainnet-v1.0/catchpoints
      volumes:
        - name: algo-mainnet-kmd-vol-root-2
          persistentVolumeClaim:
            claimName: algo-mainnet-kmd-vol-root-2
        - name: algo-mainnet-kmd-vol-net-2
          persistentVolumeClaim:
            claimName: algo-mainnet-kmd-vol-net-2
        - name: algo-mainnet-kmd-vol-catchpoints-2
          persistentVolumeClaim:
            claimName: algo-mainnet-kmd-vol-catchpoints-2

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: algo-mainnet-kmd-vol-root-2
  namespace: algo-kmd-mainnet
spec:
  storageClassName: algo-mainnet-kmd-root-2
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: algo-mainnet-kmd-vol-net-2
  namespace: algo-kmd-mainnet
spec:
  storageClassName: algo-mainnet-kmd-net-2
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 500Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: algo-mainnet-kmd-vol-catchpoints-2
  namespace: algo-kmd-mainnet
spec:
  storageClassName: algo-mainnet-kmd-catchpoints-2
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1500Gi
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: algo-mainnet-kmd-root-2
spec:
  nodeAffinity:
    required:
      nodeSelectorTerms:
        - matchExpressions:
            - key: kubernetes.io/hostname
              operator: In
              values:
                - s3-k1-fi.a-wallet.net
  storageClassName: algo-mainnet-kmd-root-2
  capacity:
    storage: 20Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/mnt/k8s/algo/mainnet-kmd/root"
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: algo-mainnet-kmd-net-2
spec:
  nodeAffinity:
    required:
      nodeSelectorTerms:
        - matchExpressions:
            - key: kubernetes.io/hostname
              operator: In
              values:
                - s3-k1-fi.a-wallet.net
  storageClassName: algo-mainnet-kmd-net-2
  capacity:
    storage: 500Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/mnt/k8s/algo/mainnet-kmd/net"
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: algo-mainnet-kmd-catchpoints-2
spec:
  nodeAffinity:
    required:
      nodeSelectorTerms:
        - matchExpressions:
            - key: kubernetes.io/hostname
              operator: In
              values:
                - s3-k1-fi.a-wallet.net
  storageClassName: algo-mainnet-kmd-catchpoints-2
  capacity:
    storage: 1500Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/mnt/k8s/algo/mainnet-kmd/catchpoints"
